---
title: Rockin' {{< fa brands r-project >}}<br>with<br>Visual Studio Code (VSCode)
author: "Marck Vaisman"
---

## Hi!

:::: {.columns}

::: {.column width=40%}
![](https://media.giphy.com/media/pxwlYSM8PfY5y/giphy.gif)
:::

::: {.column width=60%}
-   Sr. Cloud Solutions Architect | Technical Specialist | Data Scientist @ Microsoft
    -   6 mos as PM Azure Machine Learning
-   Professor, Georgetown Masters of Data Science and Analytics 
-   Co-Founder of DataCommunityDC
:::

::::

**Disclaimer:** the opinions expressed in this talk are personal and not reflective of any organization I am affiliated with.

## Thank you, AI

::: notes
- not an AI talk, but I work with this every day
- It's a great tool for certain tasks
- Given what's been going on in the world, it's been hard to concentrate
- Prompt: write a detailed outline with summary bullets for 20 slides for a presentation on using R with VSCode (also helps with ADD)
- Used Bing Chat Enterprise 
:::

![](img/bing-chat-enterprise.png){fig-align="center" height=500}

::: aside
Bing Chat Enterprise Prompt: `write a detailed outline with summary bullets for 20 slides for a presentation on using R with VSCode`
:::


## Agenda, sorta...

::: {layout-ncol=3}

![](img/talk1.png)

![](img/talk2.png)

![](img/talk3.png)
:::

## No fighting!

![](img/boxing.png){fig-align="center" height=500}

::: aside
Image generated by DALL-E on Azure OpenAI. Prompt: `rocky balboa vs ivan drago` (except logos)
:::

## Options are good!

![](img/together.png){fig-align="center" height=500}

::: aside
Image generated by DALL-E on Azure OpenAI. Prompt: `a data scientist working on two separate computers` (except logos)
:::

## About VSCode

:::: {.columns}

::: {.column width=40%}
![](img/vscode-sample.png)
:::

::: {.column width=60% .r-fit-text}
- Source-code editor built on [Electron framework](https://www.electronjs.org/docs/latest#:~:text=Electron%20is%20a%20framework%20for%20building%20desktop%20applications,and%20Linux%20%E2%80%94%20no%20native%20development%20experience%20required.)
- Many language specific development utilities
- Cloud integration
- Most of VSCode's source code is available on GitHub under the permissive MIT License.
- The binary releases by Microsoft are freeware and include proprietary code.
- A community distribution, called VSCodium, is maintained, which provides MIT licensed binaries.
:::

::::

## Why VSCode

::: {.incremental}
- Multiple languages {{< fa brands r-project >}}, {{< fa brands python >}}, {{< fa brands js >}}, {{< fa brands html5 >}}, etc.
- Remote computing and don't want to install a server based IDE
- Git interation
- Multiplexing in the terminal
- You need additional functionality via extensions
:::

## What do you need?

:::{layout-ncol=2}

### Required
- VSCode: [R Extension for VSCode](https://marketplace.visualstudio.com/items?itemName=REditorSupport.r)
- R: [`languageserver`](https://github.com/REditorSupport/languageserver) package (an imeplementation of the [Language Server Protocol](https://microsoft.github.io/language-server-protocol/))
  - code completion
  - linting
  - workspace viewer
  - debugging
  

### Optional, but highly recommended

- Python: [`radian`](https://github.com/randy3k/radian), a "21st century R console" (radian is powered by (Ï€)thon)
- R: [`httpgd`](https://github.com/nx10/httpgd) package 
- R linters 
- VSCode: [R Debugger Extension](https://marketplace.visualstudio.com/items?itemName=RDebugger.r-debugger)

:::

::: {.callout-note}
If you use multiple `R` or `Python` environments, these packages need to be installed in the _base_ environment.
:::




## 
:::: {.columns}

::: {.column width="30%"}
![](https://media.giphy.com/media/RlO3bvMJyz3L4vGKsx/giphy.gif)

Need to:

* Create key-binding for assignment `<-`  {{< kbd Alt-dash >}}
* Create key-binding for pipe `|>` {{< kbd Ctrl-Shift-M >}} 

:::

::: {.column width="70%"}
You {{< fa solid heart >}} your RStudio keyboard shorcuts!

| Task    | RStudio {{< fa brands apple >}} , {{< fa brands windows >}} | VSCode |
|---------|----------------------------------|-----------------| 
| Run code line/block | {{< kbd Cmd-Return >}} , {{< kbd Ctrl+Enter >}} | Same |
| Insert assignment operator `<-` | {{< kbd Option-- >}} , {{< kbd Alt-- >}} | N/A |
| Insert pipe operator `|>` | {{< kbd Cmd-Shift-M >}} , {{< kbd Ctrl-Shift-M >}} | N/A |
| Toggle comment | {{< kbd Cmd-Shift-C >}} , {{< kbd Ctrl-Shift-C >}} | {{< kbd Command-/ >}} , {{< kbd Ctrl-/ >}} |


:::

::::

## {background-image="https://media.giphy.com/media/3o6fIT3mShNcekq676/giphy.gif"}


## My VSCode User Settings

Press {{< kbd F1 >}} (all OS's), {{< kbd Command-Shift-P >}} ({{< fa brands apple >}}), or {{< kbd Ctrl-Shift-P >}} ({{< fa brands windows >}}) to open the Command Palette, then select `Preferences: Open User Setting (JSON)`.


```json
{
    // VSCode Editor Specific Settings //
    "editor.fontSize": 14,
    "editor.fontFamily": "Fira Code",
    "terminal.integrated.fontSize": 14,
    "terminal.integrated.fontFamily": "Fira Code",
    "editor.fontLigatures": true,
    // R Specific Settings //
    "r.plot.useHttpgd": true,
    "[r]": {
        "editor.formatOnType": true,
        "editor.formatOnSave": true,
    },
    "r.sessionWatcher": true,
    "r.rterm.option": [
        "--no-save",
        "--no-restore",
        "--no-restore-history",
        "--no-site-file",
        "--quiet"
    ],
    // If using radian: (not recommended for remote use)//
    "r.bracketedPaste": true, 
    "r.rterm.mac": "/Users/marck/miniforge3/bin/radian",
 }
```

::: notes
- `r.alwaysUseActiveTerminal` ensures that pressing Ctrl (Command) + Enter will always send to the active terminal rather than trying to create an R terminal if there is none.
- `r.bracketedPaste` ensures the command chunk can be correctly sent to radian.
- `r.sessionWatcher` enables R session watcher for better interactive functionality.
:::



## My VSCode Keyboard Bindings

Press {{< kbd F1 >}} (all OS's), {{< kbd Shift-Command-P >}} ({{< fa brands apple >}}), or {{< kbd Ctrl-Shift-P >}} ({{< fa brands windows >}}) to open the Command Palette, then select `Preferences: Open Keyboard Shortcus (JSON)`.

````json
[
  // Editor bindings //  
  {
    "key": "alt+-",
    "command": "type",
    "when": "editorLangId =~ /r|rmd|qmd/ && editorTextFocus",
    "args": {
      "text": " <- "
    }
  },
  {
    "key": "ctrl+shift+m",
    "command": "type",
    "when": "editorLangId =~ /r|rmd|qmd/ && editorTextFocus",
    "args": {
      "text": " |> "
    }
  },
  // Terminal bindings //
  {
    "key": "ctrl+shift+m",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": " |> " },
    "when": "terminalFocus"
  },
  {
    "key": "alt+-",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": " <- " },
    "when": "terminalFocus"
  },
]
````

## R interactive experience on remote machines

While you can create a connection to a remote server within VSCode using SSH, you need to do the following:

- Have `R` installed on remote machine
- Have `languageserver` and `httpgd` installed on remote machine (in base environment)
- Install the R Extension on the remote VSCode window

::: aside
Demo
:::

## Resources

::: {layout-ncol=2}

### Setting up VSCode for R
- [R in VSCode docs](https://code.visualstudio.com/docs/languages/r)
- [The VSCode R Extension wiki](https://github.com/REditorSupport/vscode-R/wiki)
- [Ken Run's website](https://renkun.me/) has several posts on using R with VSCode. He's one of the developers of the developers of the VSCode extension and the `languageserver` package
- [S/O question on adding keybindings](https://stackoverflow.com/questions/71608612/how-to-add-keybindings-in-visual-studio-code-for-the-r-terminal)
- [S/O question on getting VSCode to auto-format R code](https://stackoverflow.com/questions/57395681/getting-visual-studio-code-to-auto-format-r-code)

### Using VSCode and R with Azure Machine Learning
- [Youtube video from SLC-RUG: Using R with Visual Studio Code and Azure Machine Learning (May, 2023)](https://www.youtube.com/watch?v=lIjSzG0puMs)
- [The AI Show Live - Using R with Azure Machine Learning (May, 2023)](https://www.youtube.com/watch?v=ZjsTg2v5aSQ)
- [GitHub repo with the R/AzureML code](https://github.com/wahalulu/using-r-with-azure-machine-learning)
- [Microsoft Learn: Using R with AzureML docs](https://learn.microsoft.com/en-us/azure/machine-learning/how-to-r-overview-r-capabilities)

:::

## See ya' next year!

![](img/dancing.gif){fig-align="center" height=500}


# Thank You!

:::: {.columns}

::: {.column width=50%}
`marck.vaisman@microsoft.com`<br>
[{{< fa brands github >}} wahalulu](http://www.github.com/wahalulu)

```{r }
#| echo:false
plot(qrcode::qr_code("https://wahalulu.github.io/rockin-r-with-vscode"))
```
:::

::: {.column width=50%}
![](https://media.giphy.com/media/K3kR9EZj8Uwk8/giphy.gif)
:::

::::