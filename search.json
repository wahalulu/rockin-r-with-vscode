[
  {
    "objectID": "index.html#hi",
    "href": "index.html#hi",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "Hi!",
    "text": "Hi!\n\n\n\n\n\nSr. Cloud Solutions Architect | Technical Specialist | Data Scientist @ Microsoft\n\n6 mos as PM Azure Machine Learning\n\nProfessor, Georgetown Masters of Data Science and Analytics\nCo-Founder of DataCommunityDC\n\n\n\nDisclaimer: the opinions expressed in this talk are personal and not reflective of any organization I am affiliated with."
  },
  {
    "objectID": "index.html#thank-you-ai",
    "href": "index.html#thank-you-ai",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "Thank you, AI",
    "text": "Thank you, AI\n\n\nnot an AI talk, but I work with this every day\nIt’s a great tool for certain tasks\nGiven what’s been going on in the world, it’s been hard to concentrate\nPrompt: write a detailed outline with summary bullets for 20 slides for a presentation on using R with VSCode (also helps with ADD)\nUsed Bing Chat Enterprise\n\n\n\n\n\n\n\n\n\nBing Chat Enterprise Prompt: write a detailed outline with summary bullets for 20 slides for a presentation on using R with VSCode"
  },
  {
    "objectID": "index.html#agenda-sorta",
    "href": "index.html#agenda-sorta",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "Agenda, sorta…",
    "text": "Agenda, sorta…"
  },
  {
    "objectID": "index.html#no-fighting",
    "href": "index.html#no-fighting",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "No fighting!",
    "text": "No fighting!\n\n\n\n\n\n\n\nImage generated by DALL-E on Azure OpenAI. Prompt: rocky balboa vs ivan drago (except logos)"
  },
  {
    "objectID": "index.html#options-are-good",
    "href": "index.html#options-are-good",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "Options are good!",
    "text": "Options are good!\n\n\n\n\n\n\n\nImage generated by DALL-E on Azure OpenAI. Prompt: a data scientist working on two separate computers (except logos)"
  },
  {
    "objectID": "index.html#about-vscode",
    "href": "index.html#about-vscode",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "About VSCode",
    "text": "About VSCode\n\n\n\n\n\nSource-code editor built on Electron framework\nMany language specific development utilities\nCloud integration\nMost of VSCode’s source code is available on GitHub under the permissive MIT License.\nThe binary releases by Microsoft are freeware and include proprietary code.\nA community distribution, called VSCodium, is maintained, which provides MIT licensed binaries."
  },
  {
    "objectID": "index.html#why-vscode",
    "href": "index.html#why-vscode",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "Why VSCode",
    "text": "Why VSCode\n\n\nMultiple languages , , , , etc.\nRemote computing and don’t want to install a server based IDE\nGit interation\nMultiplexing in the terminal\nYou need additional functionality via extensions"
  },
  {
    "objectID": "index.html#what-do-you-need",
    "href": "index.html#what-do-you-need",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "What do you need?",
    "text": "What do you need?\n\n\n\nRequired\n\nVSCode: R Extension for VSCode\nR: languageserver package (an imeplementation of the Language Server Protocol)\n\ncode completion\nlinting\nworkspace viewer\ndebugging\n\n\n\n\nOptional, but highly recommended\n\nPython: radian, a “21st century R console” (radian is powered by (π)thon)\nR: httpgd package\nR linters\nVSCode: R Debugger Extension\n\n\n\n\n\n\n\n\n\n\nNote\n\n\nIf you use multiple R or Python environments, these packages need to be installed in the base environment."
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "",
    "text": "Need to:\n\nCreate key-binding for assignment &lt;- Alt-dash\nCreate key-binding for pipe |&gt; Ctrl-Shift-M\n\n\nYou  your RStudio keyboard shorcuts!\n\n\n\n\n\n\n\n\nTask\nRStudio  , \nVSCode\n\n\n\n\nRun code line/block\nCmd-Return , Ctrl+Enter\nSame\n\n\nInsert assignment operator &lt;-\nOption– , Alt–\nN/A\n\n\nInsert pipe operator |&gt;\nCmd-Shift-M , Ctrl-Shift-M\nN/A\n\n\nToggle comment\nCmd-Shift-C , Ctrl-Shift-C\nCommand-/ , Ctrl-/"
  },
  {
    "objectID": "index.html#my-vscode-user-settings",
    "href": "index.html#my-vscode-user-settings",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "My VSCode User Settings",
    "text": "My VSCode User Settings\nPress F1 (all OS’s), Command-Shift-P (), or Ctrl-Shift-P () to open the Command Palette, then select Preferences: Open User Setting (JSON).\n{\n    // VSCode Editor Specific Settings //\n    \"editor.fontSize\": 14,\n    \"editor.fontFamily\": \"Fira Code\",\n    \"terminal.integrated.fontSize\": 14,\n    \"terminal.integrated.fontFamily\": \"Fira Code\",\n    \"editor.fontLigatures\": true,\n    // R Specific Settings //\n    \"r.plot.useHttpgd\": true,\n    \"[r]\": {\n        \"editor.formatOnType\": true,\n        \"editor.formatOnSave\": true,\n    },\n    \"r.sessionWatcher\": true,\n    \"r.rterm.option\": [\n        \"--no-save\",\n        \"--no-restore\",\n        \"--no-restore-history\",\n        \"--no-site-file\",\n        \"--quiet\"\n    ],\n    // If using radian: (not recommended for remote use)//\n    \"r.bracketedPaste\": true, \n    \"r.rterm.mac\": \"/Users/marck/miniforge3/bin/radian\",\n }\n\n\nr.alwaysUseActiveTerminal ensures that pressing Ctrl (Command) + Enter will always send to the active terminal rather than trying to create an R terminal if there is none.\nr.bracketedPaste ensures the command chunk can be correctly sent to radian.\nr.sessionWatcher enables R session watcher for better interactive functionality."
  },
  {
    "objectID": "index.html#my-vscode-keyboard-bindings",
    "href": "index.html#my-vscode-keyboard-bindings",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "My VSCode Keyboard Bindings",
    "text": "My VSCode Keyboard Bindings\nPress F1 (all OS’s), Shift-Command-P (), or Ctrl-Shift-P () to open the Command Palette, then select Preferences: Open Keyboard Shortcus (JSON).\n[\n  // Editor bindings //  \n  {\n    \"key\": \"alt+-\",\n    \"command\": \"type\",\n    \"when\": \"editorLangId =~ /r|rmd|qmd/ && editorTextFocus\",\n    \"args\": {\n      \"text\": \" &lt;- \"\n    }\n  },\n  {\n    \"key\": \"ctrl+shift+m\",\n    \"command\": \"type\",\n    \"when\": \"editorLangId =~ /r|rmd|qmd/ && editorTextFocus\",\n    \"args\": {\n      \"text\": \" |&gt; \"\n    }\n  },\n  // Terminal bindings //\n  {\n    \"key\": \"ctrl+shift+m\",\n    \"command\": \"workbench.action.terminal.sendSequence\",\n    \"args\": { \"text\": \" |&gt; \" },\n    \"when\": \"terminalFocus\"\n  },\n  {\n    \"key\": \"alt+-\",\n    \"command\": \"workbench.action.terminal.sendSequence\",\n    \"args\": { \"text\": \" &lt;- \" },\n    \"when\": \"terminalFocus\"\n  },\n]"
  },
  {
    "objectID": "index.html#r-interactive-experience-on-remote-machines",
    "href": "index.html#r-interactive-experience-on-remote-machines",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "R interactive experience on remote machines",
    "text": "R interactive experience on remote machines\nWhile you can create a connection to a remote server within VSCode using SSH, you need to do the following:\n\nHave R installed on remote machine\nHave languageserver and httpgd installed on remote machine (in base environment)\nInstall the R Extension on the remote VSCode window\n\n\n\nDemo"
  },
  {
    "objectID": "index.html#resources",
    "href": "index.html#resources",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "Resources",
    "text": "Resources\n\n\n\nSetting up VSCode for R\n\nR in VSCode docs\nThe VSCode R Extension wiki\nKen Run’s website has several posts on using R with VSCode. He’s one of the developers of the developers of the VSCode extension and the languageserver package\nS/O question on adding keybindings\nS/O question on getting VSCode to auto-format R code\n\n\n\nUsing VSCode and R with Azure Machine Learning\n\nYoutube video from SLC-RUG: Using R with Visual Studio Code and Azure Machine Learning (May, 2023)\nThe AI Show Live - Using R with Azure Machine Learning (May, 2023)\nGitHub repo with the R/AzureML code\nMicrosoft Learn: Using R with AzureML docs"
  },
  {
    "objectID": "index.html#see-ya-next-year",
    "href": "index.html#see-ya-next-year",
    "title": "Rockin’ withVisual Studio Code (VSCode)",
    "section": "See ya’ next year!",
    "text": "See ya’ next year!"
  }
]